# SPDX-FileCopyrightText: 2024 Skatteverket - Swedish Tax Agency
#
# SPDX-License-Identifier: CC0-1.0

---
name: Create release

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release type:'
        required: true
        options:
          - 'patch'
          - 'minor'
          - 'major'
          - 'prepatch'
          - 'preminor'
          - 'premajor'
          - 'prerelease'        

permissions:
  actions: read
  contents: write
  id-token: write

jobs:
  build:
    name: Build
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      changelog: ${{ steps.get-changelog.outputs.changelog }}
      version: ${{ steps.create-semver.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7

      # Setup Node.js environment
      - name: Install Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          registry-url: https://registry.npmjs.org

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version "$RELEASE_TYPE")" >> "$GITHUB_ENV"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version "$RELEASE_TYPE")" >> "$GITHUB_ENV"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Create semver version
      - id: create-semver
        name: Create semver version
        run: |
          NEW_VERSION=${{ env.NEW_VERSION }}
          echo "NEW_SEMVER_VERSION=${NEW_VERSION//v}" >> "$GITHUB_ENV"

      # Configure Git
      - name: Git configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      # Create a new release branch
      - name: Create release branch
        run: git checkout -b release/${{ env.NEW_VERSION }}

      # Update changelog unreleased section with new version
      - name: Update changelog
        uses: superfaceai/release-changelog-action@38646ad355e5d79bf7aa12e233a1573e4d36faee # v2.1.3
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: release

      # Update package versions 
      - name: Update package versions react-mla
        run: jq ".version = \"${{ env.NEW_SEMVER_VERSION }}\"" package.json > package.json.tmp && mv package.json.tmp package.json
        working-directory: ./packages/react-mla

      # Update package versions 
      - name: Update package versions webcomponent-mla
        run: jq ".version = \"${{ env.NEW_SEMVER_VERSION }}\"" package.json > package.json.tmp && mv package.json.tmp package.json
        working-directory: ./packages/webcomponent-mla

      # Commit changes
      - name: Commit CHANGELOG.md and package.json changes and create tag
        run: |
          git add "./packages/react-mla/package.json"
          git add "./packages/webcomponent-mla/package.json"
          git add "package.json"
          git add "CHANGELOG.md"
          git commit -S -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags

      # Push repository changes
      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: release/${{ env.NEW_VERSION }}
          base: main
          title: New release ${{ env.NEW_VERSION }}
          body: |
              chore: New release