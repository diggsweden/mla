# SPDX-FileCopyrightText: 2024 Skatteverket - Swedish Tax Agency
#
# SPDX-License-Identifier: CC0-1.0

---
name: Create release draft

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release type:'
        required: true
        options:
          - 'patch'
          - 'minor'
          - 'major'
          - 'prepatch'
          - 'preminor'
          - 'premajor'
          - 'prerelease'        

permissions:
  contents: read

jobs:
  build:
    name: Build
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      changelog: ${{ steps.get-changelog.outputs.changelog }}
      version: ${{ steps.create-semver.outputs.version }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          persist-credentials: false 

      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          run_install: false    

      # Setup Node.js environment
      - name: Install Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          registry-url: https://registry.npmjs.org

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version "$RELEASE_TYPE")" >> "$GITHUB_ENV"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version "$RELEASE_TYPE")" >> "$GITHUB_ENV"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Create semver version
      - id: create-semver
        name: Create semver version
        run: |
          NEW_VERSION=${{ env.NEW_VERSION }}
          echo "NEW_SEMVER_VERSION=${NEW_VERSION//v}" >> "$GITHUB_ENV"

      # Import GPG key to use for signing
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true

      # Create a new release branch
      - name: Create release branch
        run: git checkout -b release/${{ env.NEW_VERSION }}

      # Update package versions 
      - name: Update package versions react-mla
        run: jq ".version = \"${{ env.NEW_SEMVER_VERSION }}\"" package.json > package.json.tmp && mv package.json.tmp package.json
        working-directory: ./packages/react-mla

      # Update package versions 
      - name: Update package versions webcomponent-mla
        run: jq ".version = \"${{ env.NEW_SEMVER_VERSION }}\"" package.json > package.json.tmp && mv package.json.tmp package.json
        working-directory: ./packages/webcomponent-mla

      # Update changelog unreleased section with new version
      - name: Update changelog
        uses: superfaceai/release-changelog-action@38646ad355e5d79bf7aa12e233a1573e4d36faee # v2.1.3
        with:
          version: ${{ env.NEW_VERSION }}
          operation: release

      # Read changelog 
      - name: Get changelog
        id: get-changelog
        uses: superfaceai/release-changelog-action@38646ad355e5d79bf7aa12e233a1573e4d36faee # v2.1.3
        with:
          version: ${{ env.NEW_VERSION }}
          operation: read

      # Commit changes and push
      - name: Commit CHANGELOG.md and package.json changes and create tag
        run: |
          git add "./packages/react-mla/package.json"
          git add "./packages/webcomponent-mla/package.json"
          git add "package.json"
          git add "CHANGELOG.md"
          git commit -S -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }} -m "release ${{ env.NEW_VERSION }}"
          git push --set-upstream origin release/${{ env.NEW_VERSION }}
          git push && git push origin tag ${{ env.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}

      # Push repository changes
      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@955adb4634198898bc24dca0468514c63a8fc98d # 1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          head: release/${{ env.NEW_VERSION }}
          base: main
          labels: release
          title: "chore: Release ${{ env.NEW_VERSION }}"
          body: ${{ steps.get-changelog.outputs.changelog }}